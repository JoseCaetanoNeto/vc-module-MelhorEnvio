!function(e){var n={};function t(o){if(n[o])return n[o].exports;var r=n[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,t),r.l=!0,r.exports}t.m=e,t.c=n,t.d=function(e,n,o){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:o})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(t.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var r in e)t.d(o,r,function(n){return e[n]}.bind(null,r));return o},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=0)}([function(e,n,t){e.exports=t(1)},function(e,n){void 0!==AppDependencies&&AppDependencies.push("vcmoduleMelhorEnvio"),angular.module("vcmoduleMelhorEnvio",[]).run(["platformWebApp.widgetService","platformWebApp.toolbarService","platformWebApp.authService",function(e,n,t){var o={name:"melhorenviomethod.commands.register",icon:"fa fa-external-link",executeMethod:function(e){$.getJSON("api/melhorenvio/oauth/authorize/?store="+e.storeId,(function(e){window.open(e[0],"_blank")}))},canExecuteMethod:function(e){return"MelhorEnvioMethod"==e.shippingMethod.code},index:99};n.register(o,"virtoCommerce.shippingModule.shippingMethodDetailController")}])}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,